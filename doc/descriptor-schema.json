{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Ouinet URI descriptor v42",
    "description": "A URI descriptor captures the state of a URI at a given moment, including its data and metadata, according to a particular injector service.",

    "definitions": {
        "uri": {
            "$id": "#uri",
            "type": "string",
            "pattern": "^[a-z][\\+\\-\\.0-9a-z]+:"
        },
        "id": {
            "$id": "#id",
            "type": "string",
            "minLength": 1
        },
        "date": {
            "$id": "#date",
            "type": "string",
            "$comment": "Format: '<long ISO 8601 UTC date up to seconds>'",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]+)?Z$"
        },
        "upbase64": {
            "$id": "#upbase64",
            "type": "string",
            "pattern": "^[+/0-9A-Za-z]+$"
        },
        "mhash": {
            "$id": "#mhash",
            "type": "string",
            "$comment": "IPFS-like Base58-encoded multihash.",
            "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$"
        },
        "dlinks": {
            "description": "A list of URIs for data retrieval.",
            "type": "array",
            "items": {
                "$ref": "#/definitions/uri"
            },
            "minItems": 1,
            "uniqueItems": true
        }
    },

    "type": "object",
    "properties": {
        "!ouinet_version": {
            "description": "The version of the schema that this descriptor adheres to.",
            "type": "integer",
            "const": 42,
            "$comment": "The same number indicated at the schema's title."
        },
        "uris": {
            "description": "The URIs that this descriptor describes.",
            "type": "array",
            "items": {
                "$ref": "#/definitions/uri"
            },
            "minItems": 1,
            "uniqueItems": true
        },
        "id": {
            "description": "A unique identifier for this injection.",
            "$ref": "#/definitions/id"
        },
        "ts": {
            "description": "The time when this descriptor was created.",
            "$ref": "#/definitions/date"
        },
        "data_hash": {
            "description": "A self-describing, text-encoded digest of this version's data.",
            "$ref": "#/definitions/mhash"
        },
        "data_length": {
            "description": "Length of this version's data in bytes.",
            "type": "integer",
            "minimum": 0
        },
        "data_links": {
            "description": "It maps data hashes to a list of URIs for data retrieval.",
            "$ref": "#/definitions/dlinks"
        },
        "patternProperties": {
            "^meta_[_0-9a-z]+$": {
                "description": "A set of arbitrary, named, string-valued properties acting as metadata (e.g. for the particular URI protocol).",
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                }
            }
        },
        "signatures": {
            "description": "Signatures of injector services on this descriptor; public key is used as signing entity.",
            "type": "object",
            "$comment": "Entity name format: '<sig algo>:<unpadded Base64 pubkey>'",
            "patternProperties": {
                "^[0-9a-z]+:[+/0-9A-Za-z]+$": {
                    "description": "Signatures of a particular injector service (exactly one for the given key and time).",
                    "type": "object",
                    "$comment": "Signature format: '<sig algo>:' (key), '<unpadded Base64 signature>' (value)",
                    "patternProperties": {
                        "^[0-9a-z]+:$": {
                            "description": "A particular signature.",
                            "$ref": "#/definitions/upbase64"
                        }
                    },
                    "properties": {
                        "ts": {
                            "description": "The time when this signature was created.",
                            "$ref": "#/definitions/date"
                        },
                        "desc": {
                            "description": "A short description of the entity performing this signature.",
                            "type": "string"
                        }
                    },
                    "additionalProperties": false,
                    "minProperties": 2,
                    "maxProperties": 3,
                    "required": ["ts"]
                }
            },
            "additionalProperties": false,
            "minProperties": 1
        },
        "unsigned": {
            "description": "This part may be added by cache publishers, but it is not signed by injector services.",
            "type": "object",
            "properties": {
                "data_links": {
                    "description": "If present, it maps data hashes to a list of URIs for data retrieval.",
                    "$ref": "#/definitions/dlinks"
                }
            }
        }
    },

    "required": ["!ouinet_version", "uris", "id", "ts", "data_length", "data_hash", "data_links", "signatures"]
}
