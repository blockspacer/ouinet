import java.text.SimpleDateFormat

apply plugin: 'com.android.library'

def gitHash = 'git rev-parse HEAD'.execute([], project.rootDir).text.trim()
def gitBranch = 'git rev-parse --abbrev-ref HEAD'.execute([], project.rootDir).text.trim()
def buildTime() {
    def df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm'Z'")
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}

android {
    compileSdkVersion 26
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        buildConfigField("String", "GIT_HASH", "\"${gitHash}\"")
        buildConfigField("String", "GIT_BRANCH", "\"${gitBranch}\"")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DBOOST_INCLUDEDIR=$boost_includedir",
                          "-DANDROID_STL='c++_shared'",
                          "-DOUINET_CLIENTLIB_PATH=$ouinet_clientlib_path"
                cppFlags "-std=c++14 -frtti -fexceptions"
            }
        }
        ndk {
            abiFilters "$android_abi"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ["$libdir"]
            assets.srcDirs = ["$assetsdir"]
        }
    }
    buildTypes {
        release {
            buildConfigField("String", "BUILD_TIME", "\"${buildTime()}\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            // Use static values for incremental builds to ensure that
            // resource files and BuildConfig aren't rebuilt with each run.
            buildConfigField("String", "BUILD_TIME", "\"0\"")
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
            buildStagingDirectory (new File(project.buildDir, "../build-cmake"))
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    lintOptions {
        disable 'UnsafeNativeCodeLocation' // Disable warning about obfsproxy executable in assets
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation "junit:junit:4.12"
    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation 'org.powermock:powermock-core:2.0.2'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.2'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.2'
    testImplementation 'com.android.support.test:rules:1.0.2'
    testImplementation 'com.android.support:support-annotations:28.0.0'
    testImplementation 'com.android.support.test:runner:1.0.2'
}
