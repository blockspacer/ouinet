version: 2

jobs:
  build:
    docker:
      - image: debian:buster

    environment:
      CMAKE_BUILD_PARALLEL_LEVEL: 3
      # cmake fails without this for some reason
      LANG: C.UTF-8
      BASH_ENV: ~/.bashrc

    steps:
      - run:
          name: Install dependencies
          command: |
            apt-get update
            apt-get install -y \
                autoconf \
                automake \
                autopoint \
                build-essential \
                cmake \
                gettext \
                git \
                libgcrypt-dev \
                libidn11-dev \
                libssl-dev \
                libtool \
                libunistring-dev \
                ninja-build \
                pkg-config \
                python-twisted \
                rsync \
                texinfo \
                wget \
                unzip \
                zlib1g-dev
            cd /usr/local/src
            wget -q "https://downloads.sourceforge.net/project/boost/boost/1.69.0/boost_1_69_0.tar.bz2"
            tar -xf boost_1_69_0.tar.bz2
            cd boost_1_69_0
            ./bootstrap.sh
            ./b2 -j $CMAKE_BUILD_PARALLEL_LEVEL -d+0 --link=shared \
                --with-system \
                --with-program_options \
                --with-test \
                --with-coroutine \
                --with-filesystem \
                --with-date_time \
                --with-regex \
                --with-iostreams \
                --with-thread \
                --with-atomic \
                --prefix=/usr/local install
            wget 'https://dl.google.com/dl/android/studio/ide-zips/3.4.2.0/android-studio-ide-183.5692245-linux.tar.gz' -O - | tar -axz -C /opt android-studio/jre
            echo 'export PATH=/opt/android-studio/jre/bin:$PATH' >> ~/.bashrc

      - checkout

      - run:
          name: Build
          command: |
            git submodule sync --recursive
            git submodule update --recursive --init
            mkdir build
            cd build
            cmake ..
            cmake --build .

      - run:
          name: Test
          command: |
            export LD_LIBRARY_PATH=/usr/local/lib

            for test in ./build/test/test-*; do
                "$test" --log_level=test_suite
            done

            export LD_LIBRARY_PATH=/usr/local/lib:$PWD/build/gcrypt/src/gcrypt/src/.libs:$PWD/build/gpg_error/out/lib:$PWD/build/modules/asio-ipfs/ipfs_bindings:$PWD/build/src/ouiservice/lampshade/lampshade_bindings
            export OUINET_BUILD_DIR=$PWD/build
            ./scripts/run_integration_tests.sh

      - run:
          name: Build.Android
          command: |
            mkdir -p build.android
            cd build.android
            ../scripts/build-android.sh
          no_output_timeout: 30m
